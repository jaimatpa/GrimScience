import { defineComponent as p, computed as d, ref as r, onMounted as m, nextTick as f, onUnmounted as v, watch as _, openBlock as b, createElementBlock as x } from "vue";
import { BulletLegend as s } from "@unovis/ts";
import { useForwardProps as g, arePropsEqual as k } from "../../utils/props.js";
const F = s.selectors, S = /* @__PURE__ */ p({
  __name: "index",
  props: {
    items: {},
    labelClassName: {},
    onLegendItemClick: { type: Function },
    labelFontSize: {},
    labelMaxWidth: {},
    bulletSize: {},
    bulletShape: { type: [Function, null] },
    data: {}
  },
  setup(c, { expose: i }) {
    const n = c;
    d(() => n.data);
    const l = g(n), t = r(), o = r();
    return m(() => {
      f(() => {
        o.value && (t.value = new s(o.value, l.value));
      });
    }), v(() => {
      var e;
      (e = t.value) == null || e.destroy();
    }), _(l, (e, a) => {
      var u;
      k(e, a) || (u = t.value) == null || u.update(l.value);
    }), i({
      component: t
    }), (e, a) => (b(), x("div", {
      "data-vis-bullet-legend": "",
      ref_key: "elRef",
      ref: o
    }, null, 512));
  }
});
export {
  F as VisBulletLegendSelectors,
  S as default
};
//# sourceMappingURL=index.js.map
